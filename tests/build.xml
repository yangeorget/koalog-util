<?xml version="1.0"?>
<project name="UTIL" default="archive" basedir=".">
        <taskdef name="kcc" classname="com.koalog.kover.ant.KCCTask"/>
        <property file="../build.properties"/>
        <property file="build.properties"/>
        <property file="VERSION"/>

        <patternset id="public.classes" >
               <include name="com/**/*.class"/>
               <exclude name="**/TestSuite.class"/>
               <exclude name="**/*Test.class"/>
               <exclude name="**/Run*.class"/>
        </patternset>

        <patternset id="test.classes" >
               <include name="**/TestSuite.class"/>
               <include name="**/*Test.class"/>
               <include name="**/Run*.class"/>
        </patternset>

        <path id="external.path">
              <pathelement location="${junit.root}/junit.jar"/>
              <pathelement location="${log4j.root}/dist/lib/log4j.jar"/>
              <pathelement location="${jaxp.root}/dom.jar"/>
              <pathelement location="${jaxp.root}/xercesImpl.jar"/>
              <pathelement location="${jaxp.root}/xalan.jar"/>
              <pathelement location="${jaxp.root}/sax.jar"/>
              <pathelement location="${jaxp.root}/jaxp-api.jar"/>
              <pathelement location="${jaxp.root}/xsltc.jar"/>
        </path>

        <path id="test.path">
	      <pathelement location="lib/util.jar"/>
              <pathelement location="lib/util-test.jar"/>
              <pathelement location="tests"/>
              <path refid="external.path"/>
        </path>
  
        <target name="clean" description="cleans">
                <delete>
                        <fileset dir="tmp" includes="**/*"/>
                </delete>
                <delete>
                        <fileset dir="classes" includes="**/*.class"/>
                </delete>                
                <delete>
                        <fileset dir="lib"/>
                </delete>
                <delete>
                        <fileset dir="doc/javadoc" includes="**/*.*"/>
                </delete>
        </target>

        <target name="compile" description="compiles the engine and the tests">
                <javac srcdir="java" 
                       destdir="classes" 
                       classpathref="external.path" 
                       debug="${javac.debug}" 
                       optimize="${javac.optimize}"/>
        </target>

        <target name="manifest" description="creates the manifest">
                <filter filtersfile="VERSION"/>
                <copy file="../installer/doc/manifest.mf" tofile="manifest.mf" filtering="true"/>
        </target>

        <target name="archive" depends="compile, manifest" description="jars the classes">
                <jar jarfile="lib/util.jar" manifest="manifest.mf">
                       <fileset dir="classes">
                                <patternset refid="public.classes"/>
		       </fileset>
                       <fileset dir="resources"/>
                </jar>
                <jar jarfile="lib/util-test.jar" manifest="manifest.mf">
                       <fileset dir="classes">
                                <patternset refid="test.classes"/>
		       </fileset>
                </jar>
        </target>

        <target name="obfuscate" depends="archive" description="obfuscates" if="util.obfuscates">
               <java classname="ZKM" fork="yes" dir="logs">
                       <classpath>
                              <pathelement location="${zkm.root}/ZKM.jar"/>
                       </classpath>
                       <arg value="../zkm.txt"/>
               </java>
        </target>

        <target name="release" depends="obfuscate, javadoc" description="does a release">
                <copy file="lib/util.jar" todir="${util.root}/lib"/>
                <copy todir="${util.root}/doc/javadoc">
                        <fileset dir="doc/javadoc" includes="**/*"/>
                </copy>
        </target>

	<target name="test_all" depends="archive" description="runs all the tests">
	        <java classname="com.koalog.util.RunAll" fork="yes">
		       <classpath>
                              <path refid="test.path"/>
		       </classpath>  
		       <arg value="tests/log4j.test_all.properties"/>
		</java>
	</target>

	<target name="test" depends="archive" description="runs a test">
	        <java classname="${util.suite.class}" fork="yes">
		       <classpath>
                              <path refid="test.path"/>
		       </classpath>  
		       <arg value="${util.test.class}"/>
		       <arg value="${util.test.method}"/>
		       <arg value="tests/log4j.test.properties"/>
		</java>
	</target>

        <target name="coverage" depends="archive" description="computes the coverage"> 
            <mkdir dir="${basedir}/tmp/coverage"/>
            <kcc classname="com.koalog.util.RunAll">
               <option key="-s" value="${basedir}/tmp/coverage/session.ccs"/>
               <option key="-i" value="${basedir}/lib/util.jar"/>
               <classpath>
                  <path refid="test.path"/>
               </classpath>
               <arg value="${basedir}/tests/log4j.test_all.properties"/>               
            </kcc>
            <move file="kover.log" tofile="logs/kover.log"/>
        </target>

	<target name="coverage_reports" description="generates the coverage reports">
	        <kcc>
                       <option key="-s" value="${basedir}/tmp/coverage/session.ccs"/>
                       <option key="-x" value="com/koalog/kover/xsl/html.xsl"/>
                       <option key="-g" value="${basedir}/tmp/coverage/util-coverage.html"/>
                       <option key="-o"/>
		</kcc>
                <kcc>
                       <option key="-s" value="${basedir}/tmp/coverage/session.ccs"/>
                       <option key="-x" value="com/koalog/kover/xsl/xml.xsl"/>
                       <option key="-g" value="${basedir}/tmp/coverage/util-coverage.xml"/>
                       <option key="-o"/>
		</kcc>
                <kcc>
                       <option key="-s" value="${basedir}/tmp/coverage/session.ccs"/>
                       <option key="-x" value="com/koalog/kover/xsl/text.xsl"/>
                       <option key="-g" value="${basedir}/tmp/coverage/util-coverage.txt"/>
                       <option key="-o"/>
		</kcc>
                <kcc>
                       <option key="-s" value="${basedir}/tmp/coverage/session.ccs"/>
                       <option key="-x" value="com/koalog/kover/xsl/csv.xsl"/>
                       <option key="-g" value="${basedir}/tmp/coverage/util-coverage.csv"/>
                       <option key="-o"/>
		</kcc>
                <move file="kover.log" tofile="logs/kover.log"/>
	</target>

        <target name="save" description="saves">
                <zip zipfile="old/util.${VERSION}.zip" whenempty="fail">
                      <zipfileset dir="java" prefix="java"/>
                      <zipfileset dir="doc" prefix="doc"/>
                      <zipfileset dir="resources" prefix="resources"/>
                      <zipfileset dir="tests" prefix="tests"/>
               </zip>
        </target>

        <target name="javadoc" description="creates the javadoc" if="util.javadoc">
                <javadoc sourcepath="java"
                         packagenames="com.koalog.util.*"
                         classpathref="external.path"
                         overview="java/com/koalog/util/overview.html"
                         destdir="doc/javadoc"
                         author="true"
                         use="true" 
                         footer="Copyright 2002 Koalog"
                         windowtitle="${NAME} (${VERSION}) API Documentation">
                         <link href="${jdk.javadoc}"
                               offline="true"
                               packagelistLoc="doc/packages/jdk"/>
                         <link href="${junit.javadoc}"
                               offline="true"
                               packagelistLoc="doc/packages/junit"/>
                </javadoc>
        </target>
</project>
